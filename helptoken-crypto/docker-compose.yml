// docker-compose.yml - Development environment
  version: '3.8'
  
  services:
    postgres:
      image: postgres:15
      environment:
        POSTGRES_DB: helptoken
        POSTGRES_USER: helptoken
        POSTGRES_PASSWORD: helptoken123
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
  
    redis:
      image: redis:7
      ports:
        - "6379:6379"
      command: redis-server --appendonly yes
      volumes:
        - redis_data:/data
  
    frontend:
      build:
        context: ./frontend
        dockerfile: Dockerfile.dev
      ports:
        - "3000:3000"
      volumes:
        - ./frontend:/app
        - /app/node_modules
      environment:
        - NODE_ENV=development
      depends_on:
        - backend
  
    backend:
      build:
        context: ./backend
        dockerfile: Dockerfile.dev
      ports:
        - "8000:8000"
      volumes:
        - ./backend:/app
        - /app/node_modules
      environment:
        - NODE_ENV=development
        - DATABASE_URL=postgresql://helptoken:helptoken123@postgres:5432/helptoken
        - REDIS_URL=redis://redis:6379
      depends_on:
        - postgres
        - redis
  
    ipfs:
      image: ipfs/go-ipfs:latest
      ports:
        - "4001:4001"
        - "5001:5001"
        - "8080:8080"
      volumes:
        - ipfs_data:/data/ipfs
  
  volumes:
    postgres_data:
    redis_data:
    ipfs_data:
  
  